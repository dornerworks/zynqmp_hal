//
// Copyright 2024, DornerWorks
//
// SPDX-License-Identifier: BSD-2-Clause
//

use tock_registers::registers::{ReadOnly, ReadWrite};
use tock_registers::{register_bitfields, register_structs};

register_structs! {
    pub RegisterBlock {
        (0x00 => pub network_control: ReadWrite<u32, network_control::Register>),
        (0x04 => pub network_config: ReadWrite<u32, network_config::Register>),
        (0x08 => pub network_status: ReadOnly<u32, network_status::Register>),
        (0x0C => _reserved0),
        (0x10 => pub dma_config: ReadWrite<u32, dma_config::Register>),
        (0x14 => pub transmit_status: ReadWrite<u32, transmit_status::Register>),
        (0x18 => pub receive_q_ptr: ReadWrite<u32, receive_q_ptr::Register>),
        (0x1C => pub transmit_q_ptr: ReadWrite<u32, transmit_q_ptr::Register>),
        (0x20 => pub receive_status: ReadWrite<u32, receive_status::Register>),
        (0x24 => pub int_status: ReadWrite<u32, int_status::Register>),
        (0x28 => pub int_enable: ReadWrite<u32, int_enable::Register>),
        (0x2C => pub int_disable: ReadWrite<u32, int_disable::Register>),
        (0x30 => pub int_mask: ReadOnly<u32, int_mask::Register>),
        (0x34 => pub phy_management: ReadWrite<u32, phy_management::Register>),
        (0x38 => pub pause_time: ReadOnly<u32, pause_time::Register>),
        (0x3C => pub tx_pause_quantum: ReadWrite<u32, tx_pause_quantum::Register>),
        (0x40 => pub pbuf_txcutthru: ReadWrite<u32, pbuf_txcutthru::Register>),
        (0x44 => pub pbuf_rxcutthru: ReadWrite<u32, pbuf_rxcutthru::Register>),
        (0x48 => pub jumbo_max_length: ReadWrite<u32, jumbo_max_length::Register>),
        (0x4C => pub external_fifo_interface: ReadWrite<u32, external_fifo_interface::Register>),
        (0x50 => _reserved1),
        (0x54 => pub axi_max_pipeline: ReadWrite<u32, axi_max_pipeline::Register>),
        (0x58 => _reserved2),
        (0x80 => pub hash_bottom: ReadWrite<u32, hash_bottom::Register>),
        (0x84 => pub hash_top: ReadWrite<u32, hash_top::Register>),
        (0x88 => pub spec_add1_bottom: ReadWrite<u32, spec_add1_bottom::Register>),
        (0x8C => pub spec_add1_top: ReadWrite<u32, spec_add1_top::Register>),
        (0x90 => pub spec_add2_bottom: ReadWrite<u32, spec_add2_bottom::Register>),
        (0x94 => pub spec_add2_top: ReadWrite<u32, spec_add2_top::Register>),
        (0x98 => pub spec_add3_bottom: ReadWrite<u32, spec_add3_bottom::Register>),
        (0x9C => pub spec_add3_top: ReadWrite<u32, spec_add3_top::Register>),
        (0xA0 => pub spec_add4_bottom: ReadWrite<u32, spec_add4_bottom::Register>),
        (0xA4 => pub spec_add4_top: ReadWrite<u32, spec_add4_top::Register>),
        (0xA8 => pub spec_type1: ReadWrite<u32, spec_type1::Register>),
        (0xAC => pub spec_type2: ReadWrite<u32, spec_type2::Register>),
        (0xB0 => pub spec_type3: ReadWrite<u32, spec_type3::Register>),
        (0xB4 => pub spec_type4: ReadWrite<u32, spec_type4::Register>),
        (0xB8 => pub wol_register: ReadWrite<u32, wol_register::Register>),
        (0xBC => pub stretch_ratio: ReadWrite<u32, stretch_ratio::Register>),
        (0xC0 => pub stacked_vlan: ReadWrite<u32, stacked_vlan::Register>),
        (0xC4 => pub tx_pfc_pause: ReadWrite<u32, tx_pfc_pause::Register>),
        (0xC8 => pub mask_add1_bottom: ReadWrite<u32, mask_add1_bottom::Register>),
        (0xCC => pub mask_add1_top: ReadWrite<u32, mask_add1_top::Register>),
        (0xD0 => pub dma_addr_or_mask: ReadWrite<u32, dma_addr_or_mask::Register>),
        (0xD4 => pub rx_ptp_unicast: ReadWrite<u32, rx_ptp_unicast::Register>),
        (0xD8 => pub tx_ptp_unicast: ReadWrite<u32, tx_ptp_unicast::Register>),
        (0xDC => pub tsu_nsec_cmp: ReadWrite<u32, tsu_nsec_cmp::Register>),
        (0xE0 => pub tsu_sec_cmp: ReadWrite<u32, tsu_sec_cmp::Register>),
        (0xE4 => pub tsu_msb_sec_cmp: ReadWrite<u32, tsu_msb_sec_cmp::Register>),
        (0xE8 => pub tsu_ptp_tx_msb_sec: ReadOnly<u32, tsu_ptp_tx_msb_sec::Register>),
        (0xEC => pub tsu_ptp_rx_msb_sec: ReadOnly<u32, tsu_ptp_rx_msb_sec::Register>),
        (0xF0 => pub tsu_peer_tx_msb_sec: ReadOnly<u32, tsu_peer_tx_msb_sec::Register>),
        (0xF4 => pub tsu_peer_rx_msb_sec: ReadOnly<u32, tsu_peer_rx_msb_sec::Register>),
        (0xF8 => pub dpram_fill_dbg: ReadWrite<u32, dpram_fill_dbg::Register>),
        (0xFC => pub revision_reg: ReadOnly<u32, revision_reg::Register>),
        (0x100 => pub octets_txed_bottom: ReadWrite<u32, octets_txed_bottom::Register>),
        (0x104 => pub octets_txed_top: ReadWrite<u32, octets_txed_top::Register>),
        (0x108 => pub frames_txed_ok: ReadWrite<u32, frames_txed_ok::Register>),
        (0x10C => pub broadcast_txed: ReadWrite<u32, broadcast_txed::Register>),
        (0x110 => pub multicast_txed: ReadWrite<u32, multicast_txed::Register>),
        (0x114 => pub pause_frames_txed: ReadWrite<u32, pause_frames_txed::Register>),
        (0x118 => pub frames_txed_64: ReadWrite<u32, frames_txed_64::Register>),
        (0x11C => pub frames_txed_65: ReadWrite<u32, frames_txed_65::Register>),
        (0x120 => pub frames_txed_128: ReadWrite<u32, frames_txed_128::Register>),
        (0x124 => pub frames_txed_256: ReadWrite<u32, frames_txed_256::Register>),
        (0x128 => pub frames_txed_512: ReadWrite<u32, frames_txed_512::Register>),
        (0x12C => pub frames_txed_1024: ReadWrite<u32, frames_txed_1024::Register>),
        (0x130 => pub frames_txed_1519: ReadWrite<u32, frames_txed_1519::Register>),
        (0x134 => pub tx_underruns: ReadWrite<u32, tx_underruns::Register>),
        (0x138 => pub single_collisions: ReadWrite<u32, single_collisions::Register>),
        (0x13C => pub multiple_collisions: ReadWrite<u32, multiple_collisions::Register>),
        (0x140 => pub excessive_collisions: ReadWrite<u32, excessive_collisions::Register>),
        (0x144 => pub late_collisions: ReadWrite<u32, late_collisions::Register>),
        (0x148 => pub deferred_frames: ReadWrite<u32, deferred_frames::Register>),
        (0x14C => pub crs_errors: ReadWrite<u32, crs_errors::Register>),
        (0x150 => pub octets_rxed_bottom: ReadWrite<u32, octets_rxed_bottom::Register>),
        (0x154 => pub octets_rxed_top: ReadWrite<u32, octets_rxed_top::Register>),
        (0x158 => pub frames_rxed_ok: ReadWrite<u32, frames_rxed_ok::Register>),
        (0x15C => pub broadcast_rxed: ReadWrite<u32, broadcast_rxed::Register>),
        (0x160 => pub multicast_rxed: ReadWrite<u32, multicast_rxed::Register>),
        (0x164 => pub pause_frames_rxed: ReadWrite<u32, pause_frames_rxed::Register>),
        (0x168 => pub frames_rxed_64: ReadWrite<u32, frames_rxed_64::Register>),
        (0x16C => pub frames_rxed_65: ReadWrite<u32, frames_rxed_65::Register>),
        (0x170 => pub frames_rxed_128: ReadWrite<u32, frames_rxed_128::Register>),
        (0x174 => pub frames_rxed_256: ReadWrite<u32, frames_rxed_256::Register>),
        (0x178 => pub frames_rxed_512: ReadWrite<u32, frames_rxed_512::Register>),
        (0x17C => pub frames_rxed_1024: ReadWrite<u32, frames_rxed_1024::Register>),
        (0x180 => pub frames_rxed_1519: ReadWrite<u32, frames_rxed_1519::Register>),
        (0x184 => pub undersize_frames: ReadWrite<u32, undersize_frames::Register>),
        (0x188 => pub excessive_rx_length: ReadWrite<u32, excessive_rx_length::Register>),
        (0x18C => pub rx_jabbers: ReadWrite<u32, rx_jabbers::Register>),
        (0x190 => pub fcs_errors: ReadWrite<u32, fcs_errors::Register>),
        (0x194 => pub rx_length_errors: ReadWrite<u32, rx_length_errors::Register>),
        (0x198 => pub rx_symbol_errors: ReadWrite<u32, rx_symbol_errors::Register>),
        (0x19C => pub alignment_errors: ReadWrite<u32, alignment_errors::Register>),
        (0x1A0 => pub rx_resource_errors: ReadWrite<u32, rx_resource_errors::Register>),
        (0x1A4 => pub rx_overruns: ReadWrite<u32, rx_overruns::Register>),
        (0x1A8 => pub rx_ip_ck_errors: ReadWrite<u32, rx_ip_ck_errors::Register>),
        (0x1AC => pub rx_tcp_ck_errors: ReadWrite<u32, rx_tcp_ck_errors::Register>),
        (0x1B0 => pub rx_udp_ck_errors: ReadWrite<u32, rx_udp_ck_errors::Register>),
        (0x1B4 => pub auto_flushed_pkts: ReadWrite<u32, auto_flushed_pkts::Register>),
        (0x1B8 => _reserved3),
        (0x1BC => pub tsu_timer_incr_sub_nsec: ReadWrite<u32, tsu_timer_incr_sub_nsec::Register>),
        (0x1C0 => pub tsu_timer_msb_sec: ReadWrite<u32, tsu_timer_msb_sec::Register>),
        (0x1C4 => pub tsu_strobe_msb_sec: ReadOnly<u32, tsu_strobe_msb_sec::Register>),
        (0x1C8 => pub tsu_strobe_sec: ReadOnly<u32, tsu_strobe_sec::Register>),
        (0x1CC => pub tsu_strobe_nsec: ReadOnly<u32, tsu_strobe_nsec::Register>),
        (0x1D0 => pub tsu_timer_sec: ReadWrite<u32, tsu_timer_sec::Register>),
        (0x1D4 => pub tsu_timer_nsec: ReadWrite<u32, tsu_timer_nsec::Register>),
        (0x1D8 => pub tsu_timer_adjust: ReadWrite<u32, tsu_timer_adjust::Register>),
        (0x1DC => pub tsu_timer_incr: ReadWrite<u32, tsu_timer_incr::Register>),
        (0x1E0 => pub tsu_ptp_tx_sec: ReadOnly<u32, tsu_ptp_tx_sec::Register>),
        (0x1E4 => pub tsu_ptp_tx_nsec: ReadOnly<u32, tsu_ptp_tx_nsec::Register>),
        (0x1E8 => pub tsu_ptp_rx_sec: ReadOnly<u32, tsu_ptp_rx_sec::Register>),
        (0x1EC => pub tsu_ptp_rx_nsec: ReadOnly<u32, tsu_ptp_rx_nsec::Register>),
        (0x1F0 => pub tsu_peer_tx_sec: ReadOnly<u32, tsu_peer_tx_sec::Register>),
        (0x1F4 => pub tsu_peer_tx_nsec: ReadOnly<u32, tsu_peer_tx_nsec::Register>),
        (0x1F8 => pub tsu_peer_rx_sec: ReadOnly<u32, tsu_peer_rx_sec::Register>),
        (0x1FC => pub tsu_peer_rx_nsec: ReadOnly<u32, tsu_peer_rx_nsec::Register>),
        (0x200 => pub pcs_control: ReadWrite<u32, pcs_control::Register>),
        (0x204 => pub pcs_status: ReadOnly<u32, pcs_status::Register>),
        (0x208 => pub pcs_phy_top_id: ReadOnly<u32, pcs_phy_top_id::Register>),
        (0x20C => pub pcs_phy_bot_id: ReadOnly<u32, pcs_phy_bot_id::Register>),
        (0x210 => pub pcs_an_adv: ReadWrite<u32, pcs_an_adv::Register>),
        (0x214 => pub pcs_an_lp_base: ReadOnly<u32, pcs_an_lp_base::Register>),
        (0x218 => pub pcs_an_exp: ReadOnly<u32, pcs_an_exp::Register>),
        (0x21C => pub pcs_an_np_tx: ReadWrite<u32, pcs_an_np_tx::Register>),
        (0x220 => pub pcs_an_lp_np: ReadOnly<u32, pcs_an_lp_np::Register>),
        (0x224 => _reserved4),
        (0x23C => pub pcs_an_ext_status: ReadOnly<u32, pcs_an_ext_status::Register>),
        (0x240 => _reserved5),
        (0x270 => pub rx_lpi: ReadWrite<u32, rx_lpi::Register>),
        (0x274 => pub rx_lpi_time: ReadWrite<u32, rx_lpi_time::Register>),
        (0x278 => pub tx_lpi: ReadWrite<u32, tx_lpi::Register>),
        (0x27C => pub tx_lpi_time: ReadWrite<u32, tx_lpi_time::Register>),
        (0x280 => pub designcfg_debug1: ReadOnly<u32, designcfg_debug1::Register>),
        (0x284 => pub designcfg_debug2: ReadOnly<u32, designcfg_debug2::Register>),
        (0x288 => pub designcfg_debug3: ReadOnly<u32, designcfg_debug3::Register>),
        (0x28C => _designcfg_debug4),
        (0x290 => pub designcfg_debug5: ReadOnly<u32, designcfg_debug5::Register>),
        (0x294 => pub designcfg_debug6: ReadOnly<u32, designcfg_debug6::Register>),
        (0x298 => pub designcfg_debug7: ReadOnly<u32, designcfg_debug7::Register>),
        (0x29C => pub designcfg_debug8: ReadOnly<u32, designcfg_debug8::Register>),
        (0x2A0 => pub designcfg_debug9: ReadOnly<u32, designcfg_debug9::Register>),
        (0x2A4 => pub designcfg_debug10: ReadOnly<u32, designcfg_debug10::Register>),
        (0x2A8 => _reserved6),
        (0x400 => pub int_q1_status: ReadWrite<u32, int_q1_status::Register>),
        (0x404 => _reserved7),
        (0x440 => pub transmit_q1_ptr: ReadWrite<u32, transmit_q1_ptr::Register>),
        (0x444 => _reserved8),
        (0x480 => pub receive_q1_ptr: ReadWrite<u32, receive_q1_ptr::Register>),
        (0x484 => _reserved9),
        (0x4A0 => pub dma_rxbuf_size_q1: ReadWrite<u32, dma_rxbuf_size_q1::Register>),
        (0x4A4 => _reserved10),
        (0x4BC => pub cbs_control: ReadWrite<u32, cbs_control::Register>),
        (0x4C0 => _reserved11),
        (0x4C8 => pub upper_tx_q_base_addr: ReadWrite<u32, upper_tx_q_base_addr::Register>),
        (0x4CC => pub tx_bd_control: ReadWrite<u32, tx_bd_control::Register>),
        (0x4D0 => pub rx_bd_control: ReadWrite<u32, rx_bd_control::Register>),
        (0x4D4 => pub upper_rx_q_base_addr: ReadWrite<u32, upper_rx_q_base_addr::Register>),
        (0x4D8 => _reserved12),
        (0x500 => pub screening_type_1_register_0: ReadWrite<u32, screening_type_1_register_0::Register>),
        (0x504 => pub screening_type_1_register_1: ReadWrite<u32, screening_type_1_register_1::Register>),
        (0x508 => pub screening_type_1_register_2: ReadWrite<u32, screening_type_1_register_2::Register>),
        (0x50C => pub screening_type_1_register_3: ReadWrite<u32, screening_type_1_register_3::Register>),
        (0x510 => _reserved13),
        (0x540 => pub screening_type_2_register_0: ReadWrite<u32, screening_type_2_register_0::Register>),
        (0x544 => pub screening_type_2_register_1: ReadWrite<u32, screening_type_2_register_1::Register>),
        (0x548 => pub screening_type_2_register_2: ReadWrite<u32, screening_type_2_register_2::Register>),
        (0x54C => pub screening_type_2_register_3: ReadWrite<u32, screening_type_2_register_3::Register>),
        (0x550 => _reserved14),
        (0x600 => pub int_q1_enable: ReadWrite<u32, int_q1_enable::Register>),
        (0x604 => _reserved15),
        (0x620 => pub int_q1_disable: ReadWrite<u32, int_q1_disable::Register>),
        (0x624 => _reserved16),
        (0x640 => pub int_q1_mask: ReadOnly<u32, int_q1_mask::Register>),
        (0x644 => _reserved17),
        (0x6E0 => pub screening_type_2_ethertype_reg_0: ReadWrite<u32, screening_type_2_ethertype_reg_0::Register>),
        (0x6E4 => pub screening_type_2_ethertype_reg_1: ReadWrite<u32, screening_type_2_ethertype_reg_1::Register>),
        (0x6E8 => pub screening_type_2_ethertype_reg_2: ReadWrite<u32, screening_type_2_ethertype_reg_2::Register>),
        (0x6EC => pub screening_type_2_ethertype_reg_3: ReadWrite<u32, screening_type_2_ethertype_reg_3::Register>),
        (0x6F0 => _reserved18),
        (0x700 => pub type2_compare_0_word_0: ReadWrite<u32, type2_compare_0_word_0::Register>),
        (0x704 => pub type2_compare_0_word_1: ReadWrite<u32, type2_compare_0_word_1::Register>),
        (0x708 => pub type2_compare_1_word_0: ReadWrite<u32, type2_compare_1_word_0::Register>),
        (0x70C => pub type2_compare_1_word_1: ReadWrite<u32, type2_compare_1_word_1::Register>),
        (0x710 => pub type2_compare_2_word_0: ReadWrite<u32, type2_compare_2_word_0::Register>),
        (0x714 => pub type2_compare_2_word_1: ReadWrite<u32, type2_compare_2_word_1::Register>),
        (0x718 => pub type2_compare_3_word_0: ReadWrite<u32, type2_compare_3_word_0::Register>),
        (0x71C => pub type2_compare_3_word_1: ReadWrite<u32, type2_compare_3_word_1::Register>),
        (0x720 => @END),
    }
}

register_bitfields! {
    u32,
    pub network_control [
        ONE_STEP_SYNC_MODE OFFSET(24) NUMBITS(1) [],
        EXT_TSU_PORT_ENABLE OFFSET(23) NUMBITS(1) [],
        STORE_UDP_OFFSET OFFSET(22) NUMBITS(1) [],
        ALT_SGMII_MODE OFFSET(21) NUMBITS(1) [],
        PTP_UNICAST_ENA OFFSET(20) NUMBITS(1) [],
        TX_LPI_EN OFFSET(19) NUMBITS(1) [],
        FLUSH_RX_PKT_PCLK OFFSET(18) NUMBITS(1) [],
        TRANSMIT_PFC_PRIORITY_BASED_PAUSE_FRAME OFFSET(17) NUMBITS(1) [],
        PFC_ENABLE OFFSET(16) NUMBITS(1) [],
        STORE_RX_TS OFFSET(15) NUMBITS(1) [],
        TX_PAUSE_FRAME_ZERO OFFSET(12) NUMBITS(1) [],
        TX_PAUSE_FRAME_REQ OFFSET(11) NUMBITS(1) [],
        TX_HALT_PCLK OFFSET(10) NUMBITS(1) [],
        TX_START_PCLK OFFSET(9) NUMBITS(1) [],
        BACK_PRESSURE OFFSET(8) NUMBITS(1) [],
        STATS_WRITE_EN OFFSET(7) NUMBITS(1) [],
        INC_ALL_STATS_REGS OFFSET(6) NUMBITS(1) [],
        CLEAR_ALL_STATS_REGS OFFSET(5) NUMBITS(1) [],
        MAN_PORT_EN OFFSET(4) NUMBITS(1) [],
        ENABLE_TRANSMIT OFFSET(3) NUMBITS(1) [],
        ENABLE_RECEIVE OFFSET(2) NUMBITS(1) [],
        LOOPBACK_LOCAL OFFSET(1) NUMBITS(1) [],
        LOOPBACK OFFSET(0) NUMBITS(1) [],
    ],
    pub network_config [
        UNI_DIRECTION_ENABLE OFFSET(31) NUMBITS(1) [],
        IGNORE_IPG_RX_ER OFFSET(30) NUMBITS(1) [],
        NSP_CHANGE OFFSET(29) NUMBITS(1) [],
        IPG_STRETCH_ENABLE OFFSET(28) NUMBITS(1) [],
        SGMII_MODE_ENABLE OFFSET(27) NUMBITS(1) [],
        IGNORE_RX_FCS OFFSET(26) NUMBITS(1) [],
        EN_HALF_DUPLEX_RX OFFSET(25) NUMBITS(1) [],
        RECEIVE_CHECKSUM_OFFLOAD_ENABLE OFFSET(24) NUMBITS(1) [],
        DISABLE_COPY_OF_PAUSE_FRAMES OFFSET(23) NUMBITS(1) [],
        DATA_BUS_WIDTH OFFSET(21) NUMBITS(2) [],
        MDC_CLOCK_DIVISION OFFSET(18) NUMBITS(3) [],
        FCS_REMOVE OFFSET(17) NUMBITS(1) [],
        LENGTH_FIELD_ERROR_FRAME_DISCARD OFFSET(16) NUMBITS(1) [],
        RECEIVE_BUFFER_OFFSET OFFSET(14) NUMBITS(2) [],
        PAUSE_ENABLE OFFSET(13) NUMBITS(1) [],
        RETRY_TEST OFFSET(12) NUMBITS(1) [],
        PCS_SELECT OFFSET(11) NUMBITS(1) [],
        GIGABIT_MODE_ENABLE OFFSET(10) NUMBITS(1) [],
        EXTERNAL_ADDRESS_MATCH_ENABLE OFFSET(9) NUMBITS(1) [],
        RECEIVE_1536_BYTE_FRAMES OFFSET(8) NUMBITS(1) [],
        UNICAST_HASH_ENABLE OFFSET(7) NUMBITS(1) [],
        MULTICAST_HASH_ENABLE OFFSET(6) NUMBITS(1) [],
        NO_BROADCAST OFFSET(5) NUMBITS(1) [],
        COPY_ALL_FRAMES OFFSET(4) NUMBITS(1) [],
        JUMBO_FRAMES OFFSET(3) NUMBITS(1) [],
        DISCARD_NON_VLAN_FRAMES OFFSET(2) NUMBITS(1) [],
        FULL_DUPLEX OFFSET(1) NUMBITS(1) [],
        SPEED OFFSET(0) NUMBITS(1) [],
    ],
    pub network_status [
        LPI_INDICATE_PCLK OFFSET(7) NUMBITS(1) [],
        PFC_NEGOTIATE_PCLK OFFSET(6) NUMBITS(1) [],
        MAC_PAUSE_TX_EN OFFSET(5) NUMBITS(1) [],
        MAC_PAUSE_RX_EN OFFSET(4) NUMBITS(1) [],
        MAC_FULL_DUPLEX OFFSET(3) NUMBITS(1) [],
        MAN_DONE OFFSET(2) NUMBITS(1) [],
        MDIO_IN OFFSET(1) NUMBITS(1) [],
        PCS_LINK_STATE OFFSET(0) NUMBITS(1) [],
    ],
    pub dma_config [
        DMA_ADDR_BUS_WIDTH_1 OFFSET(30) NUMBITS(1) [],
        TX_BD_EXTENDED_MODE_EN OFFSET(29) NUMBITS(1) [],
        RX_BD_EXTENDED_MODE_EN OFFSET(28) NUMBITS(1) [],
        FORCE_MAX_AMBA_BURST_TX OFFSET(26) NUMBITS(1) [],
        FORCE_MAX_AMBA_BURST_RX OFFSET(25) NUMBITS(1) [],
        FORCE_DISCARD_ON_ERR OFFSET(24) NUMBITS(1) [],
        RX_BUF_SIZE OFFSET(16) NUMBITS(8) [],
        TX_PBUF_TCP_EN OFFSET(11) NUMBITS(1) [],
        TX_PBUF_SIZE OFFSET(10) NUMBITS(1) [],
        RX_PBUF_SIZE OFFSET(8) NUMBITS(2) [
            PBUF_4KB = 0,
            PBUF_8KB = 1,
            PBUF_16KB = 2,
            PBUF_32KB = 3,
        ],
        ENDIAN_SWAP_PACKET OFFSET(7) NUMBITS(1) [],
        ENDIAN_SWAP_MANAGEMENT OFFSET(6) NUMBITS(1) [],
        AMBA_BURST_LENGTH OFFSET(0) NUMBITS(5) [],
    ],
    pub transmit_status [
        RESP_NOT_OK OFFSET(8) NUMBITS(1) [],
        LATE_COLLISION_OCCURRED OFFSET(7) NUMBITS(1) [],
        TRANSMIT_UNDER_RUN OFFSET(6) NUMBITS(1) [],
        TRANSMIT_COMPLETE OFFSET(5) NUMBITS(1) [],
        AMBA_ERROR OFFSET(4) NUMBITS(1) [],
        TRANSMIT_GO OFFSET(3) NUMBITS(1) [],
        RETRY_LIMIT_EXCEEDED OFFSET(2) NUMBITS(1) [],
        COLLISION_OCCURRED OFFSET(1) NUMBITS(1) [],
        USED_BIT_READ OFFSET(0) NUMBITS(1) [],
    ],
    pub receive_q_ptr [
        DMA_RX_Q_PTR OFFSET(0) NUMBITS(32) [],
    ],
    pub transmit_q_ptr [
        DMA_TX_Q_PTR OFFSET(0) NUMBITS(32) [],
    ],
    pub receive_status [
        RESP_NOT_OK OFFSET(3) NUMBITS(1) [],
        RECEIVE_OVERRUN OFFSET(2) NUMBITS(1) [],
        FRAME_RECEIVED OFFSET(1) NUMBITS(1) [],
        BUFFER_NOT_AVAILABLE OFFSET(0) NUMBITS(1) [],
    ],
    pub int_status [
        TSU_TIMER_COMPARISON_INTERRUPT OFFSET(29) NUMBITS(1) [],
        WOL_INTERRUPT OFFSET(28) NUMBITS(1) [],
        RECEIVE_LPI_INDICATION_STATUS_BIT_CHANGE OFFSET(27) NUMBITS(1) [],
        TSU_SECONDS_REGISTER_INCREMENT OFFSET(26) NUMBITS(1) [],
        PTP_PDELAY_RESP_FRAME_TRANSMITTED OFFSET(25) NUMBITS(1) [],
        PTP_PDELAY_REQ_FRAME_TRANSMITTED OFFSET(24) NUMBITS(1) [],
        PTP_PDELAY_RESP_FRAME_RECEIVED OFFSET(23) NUMBITS(1) [],
        PTP_PDELAY_REQ_FRAME_RECEIVED OFFSET(22) NUMBITS(1) [],
        PTP_SYNC_FRAME_TRANSMITTED OFFSET(21) NUMBITS(1) [],
        PTP_DELAY_REQ_FRAME_TRANSMITTED OFFSET(20) NUMBITS(1) [],
        PTP_SYNC_FRAME_RECEIVED OFFSET(19) NUMBITS(1) [],
        PTP_DELAY_REQ_FRAME_RECEIVED OFFSET(18) NUMBITS(1) [],
        PCS_LINK_PARTNER_PAGE_RECEIVED OFFSET(17) NUMBITS(1) [],
        PCS_AUTO_NEGOTIATION_COMPLETE OFFSET(16) NUMBITS(1) [],
        EXTERNAL_INTERRUPT OFFSET(15) NUMBITS(1) [],
        PAUSE_FRAME_TRANSMITTED OFFSET(14) NUMBITS(1) [],
        PAUSE_TIME_ELAPSED OFFSET(13) NUMBITS(1) [],
        PAUSE_FRAME_WITH_NON_ZERO_PAUSE_QUANTUM_RECEIVED OFFSET(12) NUMBITS(1) [],
        RESP_NOT_OK OFFSET(11) NUMBITS(1) [],
        RECEIVE_OVERRUN OFFSET(10) NUMBITS(1) [],
        LINK_CHANGE OFFSET(9) NUMBITS(1) [],
        TRANSMIT_COMPLETE OFFSET(7) NUMBITS(1) [],
        AMBA_ERROR OFFSET(6) NUMBITS(1) [],
        RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION OFFSET(5) NUMBITS(1) [],
        TRANSMIT_UNDER_RUN OFFSET(4) NUMBITS(1) [],
        TX_USED_BIT_READ OFFSET(3) NUMBITS(1) [],
        RX_USED_BIT_READ OFFSET(2) NUMBITS(1) [],
        RECEIVE_COMPLETE OFFSET(1) NUMBITS(1) [],
        MANAGEMENT_FRAME_SENT OFFSET(0) NUMBITS(1) [],
    ],
    pub int_enable [
        ENABLE_TSU_TIMER_COMPARISON_INTERRUPT OFFSET(29) NUMBITS(1) [],
        ENABLE_WOL_EVENT_RECEIVED_INTERRUPT OFFSET(28) NUMBITS(1) [],
        ENABLE_RX_LPI_INDICATION_INTERRUPT OFFSET(27) NUMBITS(1) [],
        ENABLE_TSU_SECONDS_REGISTER_INCREMENT OFFSET(26) NUMBITS(1) [],
        ENABLE_PTP_PDELAY_RESP_FRAME_TRANSMITTED OFFSET(25) NUMBITS(1) [],
        ENABLE_PTP_PDELAY_REQ_FRAME_TRANSMITTED OFFSET(24) NUMBITS(1) [],
        ENABLE_PTP_PDELAY_RESP_FRAME_RECEIVED OFFSET(23) NUMBITS(1) [],
        ENABLE_PTP_PDELAY_REQ_FRAME_RECEIVED OFFSET(22) NUMBITS(1) [],
        ENABLE_PTP_SYNC_FRAME_TRANSMITTED OFFSET(21) NUMBITS(1) [],
        ENABLE_PTP_DELAY_REQ_FRAME_TRANSMITTED OFFSET(20) NUMBITS(1) [],
        ENABLE_PTP_SYNC_FRAME_RECEIVED OFFSET(19) NUMBITS(1) [],
        ENABLE_PTP_DELAY_REQ_FRAME_RECEIVED OFFSET(18) NUMBITS(1) [],
        ENABLE_PCS_LINK_PARTNER_PAGE_RECEIVED OFFSET(17) NUMBITS(1) [],
        ENABLE_PCS_AUTO_NEGOTIATION_COMPLETE_INTERRUPT OFFSET(16) NUMBITS(1) [],
        ENABLE_EXTERNAL_INTERRUPT OFFSET(15) NUMBITS(1) [],
        ENABLE_PAUSE_FRAME_TRANSMITTED_INTERRUPT OFFSET(14) NUMBITS(1) [],
        ENABLE_PAUSE_TIME_ZERO_INTERRUPT OFFSET(13) NUMBITS(1) [],
        ENABLE_PAUSE_FRAME_WITH_NON_ZERO_PAUSE_QUANTUM_INTERRUPT OFFSET(12) NUMBITS(1) [],
        ENABLE_RESP_NOT_OK_INTERRUPT OFFSET(11) NUMBITS(1) [],
        ENABLE_RECEIVE_OVERRUN_INTERRUPT OFFSET(10) NUMBITS(1) [],
        ENABLE_LINK_CHANGE_INTERRUPT OFFSET(9) NUMBITS(1) [],
        NOT_USED OFFSET(8) NUMBITS(1) [],
        ENABLE_TRANSMIT_COMPLETE_INTERRUPT OFFSET(7) NUMBITS(1) [],
        ENABLE_TRANSMIT_FRAME_CORRUPTION_DUE_TO_AMBA_ERROR_INTERRUPT OFFSET(6) NUMBITS(1) [],
        ENABLE_RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION_INTERRUPT OFFSET(5) NUMBITS(1) [],
        ENABLE_TRANSMIT_BUFFER_UNDER_RUN_INTERRUPT OFFSET(4) NUMBITS(1) [],
        ENABLE_TRANSMIT_USED_BIT_READ_INTERRUPT OFFSET(3) NUMBITS(1) [],
        ENABLE_RECEIVE_USED_BIT_READ_INTERRUPT OFFSET(2) NUMBITS(1) [],
        ENABLE_RECEIVE_COMPLETE_INTERRUPT OFFSET(1) NUMBITS(1) [],
        ENABLE_MANAGEMENT_DONE_INTERRUPT OFFSET(0) NUMBITS(1) [],
    ],
    pub int_disable [
        DISABLE_TSU_TIMER_COMPARISON_INTERRUPT OFFSET(29) NUMBITS(1) [],
        DISABLE_WOL_EVENT_RECEIVED_INTERRUPT OFFSET(28) NUMBITS(1) [],
        DISABLE_RX_LPI_INDICATION_INTERRUPT OFFSET(27) NUMBITS(1) [],
        DISABLE_TSU_SECONDS_REGISTER_INCREMENT OFFSET(26) NUMBITS(1) [],
        DISABLE_PTP_PDELAY_RESP_FRAME_TRANSMITTED OFFSET(25) NUMBITS(1) [],
        DISABLE_PTP_PDELAY_REQ_FRAME_TRANSMITTED OFFSET(24) NUMBITS(1) [],
        DISABLE_PTP_PDELAY_RESP_FRAME_RECEIVED OFFSET(23) NUMBITS(1) [],
        DISABLE_PTP_PDELAY_REQ_FRAME_RECEIVED OFFSET(22) NUMBITS(1) [],
        DISABLE_PTP_SYNC_FRAME_TRANSMITTED OFFSET(21) NUMBITS(1) [],
        DISABLE_PTP_DELAY_REQ_FRAME_TRANSMITTED OFFSET(20) NUMBITS(1) [],
        DISABLE_PTP_SYNC_FRAME_RECEIVED OFFSET(19) NUMBITS(1) [],
        DISABLE_PTP_DELAY_REQ_FRAME_RECEIVED OFFSET(18) NUMBITS(1) [],
        DISABLE_PCS_LINK_PARTNER_PAGE_RECEIVED OFFSET(17) NUMBITS(1) [],
        DISABLE_PCS_AUTO_NEGOTIATION_COMPLETE_INTERRUPT OFFSET(16) NUMBITS(1) [],
        DISABLE_EXTERNAL_INTERRUPT OFFSET(15) NUMBITS(1) [],
        DISABLE_PAUSE_FRAME_TRANSMITTED_INTERRUPT OFFSET(14) NUMBITS(1) [],
        DISABLE_PAUSE_TIME_ZERO_INTERRUPT OFFSET(13) NUMBITS(1) [],
        DISABLE_PAUSE_FRAME_WITH_NON_ZERO_PAUSE_QUANTUM_INTERRUPT OFFSET(12) NUMBITS(1) [],
        DISABLE_RESP_NOT_OK_INTERRUPT OFFSET(11) NUMBITS(1) [],
        DISABLE_RECEIVE_OVERRUN_INTERRUPT OFFSET(10) NUMBITS(1) [],
        DISABLE_LINK_CHANGE_INTERRUPT OFFSET(9) NUMBITS(1) [],
        NOT_USED OFFSET(8) NUMBITS(1) [],
        DISABLE_TRANSMIT_COMPLETE_INTERRUPT OFFSET(7) NUMBITS(1) [],
        DISABLE_TRANSMIT_FRAME_CORRUPTION_DUE_TO_AMBA_ERROR_INTERRUPT OFFSET(6) NUMBITS(1) [],
        DISABLE_RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION_INTERRUPT OFFSET(5) NUMBITS(1) [],
        DISABLE_TRANSMIT_BUFFER_UNDER_RUN_INTERRUPT OFFSET(4) NUMBITS(1) [],
        DISABLE_TRANSMIT_USED_BIT_READ_INTERRUPT OFFSET(3) NUMBITS(1) [],
        DISABLE_RECEIVE_USED_BIT_READ_INTERRUPT OFFSET(2) NUMBITS(1) [],
        DISABLE_RECEIVE_COMPLETE_INTERRUPT OFFSET(1) NUMBITS(1) [],
        DISABLE_MANAGEMENT_DONE_INTERRUPT OFFSET(0) NUMBITS(1) [],
    ],
    pub int_mask [
        TSU_TIMER_COMPARISON_MASK OFFSET(29) NUMBITS(1) [],
        WOL_EVENT_RECEIVED_MASK OFFSET(28) NUMBITS(1) [],
        RX_LPI_INDICATION_MASK OFFSET(27) NUMBITS(1) [],
        TSU_SECONDS_REGISTER_INCREMENT_MASK OFFSET(26) NUMBITS(1) [],
        PTP_PDELAY_RESP_FRAME_TRANSMITTED_MASK OFFSET(25) NUMBITS(1) [],
        PTP_PDELAY_REQ_FRAME_TRANSMITTED_MASK OFFSET(24) NUMBITS(1) [],
        PTP_PDELAY_RESP_FRAME_RECEIVED_MASK OFFSET(23) NUMBITS(1) [],
        PTP_PDELAY_REQ_FRAME_RECEIVED_MASK OFFSET(22) NUMBITS(1) [],
        PTP_SYNC_FRAME_TRANSMITTED_MASK OFFSET(21) NUMBITS(1) [],
        PTP_DELAY_REQ_FRAME_TRANSMITTED_MASK OFFSET(20) NUMBITS(1) [],
        PTP_SYNC_FRAME_RECEIVED_MASK OFFSET(19) NUMBITS(1) [],
        PTP_DELAY_REQ_FRAME_RECEIVED_MASK OFFSET(18) NUMBITS(1) [],
        PCS_LINK_PARTNER_PAGE_MASK OFFSET(17) NUMBITS(1) [],
        PCS_AUTO_NEGOTIATION_COMPLETE_INTERRUPT_MASK OFFSET(16) NUMBITS(1) [],
        EXTERNAL_INTERRUPT_MASK OFFSET(15) NUMBITS(1) [],
        PAUSE_FRAME_TRANSMITTED_INTERRUPT_MASK OFFSET(14) NUMBITS(1) [],
        PAUSE_TIME_ZERO_INTERRUPT_MASK OFFSET(13) NUMBITS(1) [],
        PAUSE_FRAME_WITH_NON_ZERO_PAUSE_QUANTUM_INTERRUPT_MASK OFFSET(12) NUMBITS(1) [],
        RESP_NOT_OK_INTERRUPT_MASK OFFSET(11) NUMBITS(1) [],
        RECEIVE_OVERRUN_INTERRUPT_MASK OFFSET(10) NUMBITS(1) [],
        LINK_CHANGE_INTERRUPT_MASK OFFSET(9) NUMBITS(1) [],
        NOT_USED OFFSET(8) NUMBITS(1) [],
        TRANSMIT_COMPLETE_INTERRUPT_MASK OFFSET(7) NUMBITS(1) [],
        AMBA_ERROR_INTERRUPT_MASK OFFSET(6) NUMBITS(1) [],
        RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION OFFSET(5) NUMBITS(1) [],
        TRANSMIT_BUFFER_UNDER_RUN_INTERRUPT_MASK OFFSET(4) NUMBITS(1) [],
        TRANSMIT_USED_BIT_READ_INTERRUPT_MASK OFFSET(3) NUMBITS(1) [],
        RECEIVE_USED_BIT_READ_INTERRUPT_MASK OFFSET(2) NUMBITS(1) [],
        RECEIVE_COMPLETE_INTERRUPT_MASK OFFSET(1) NUMBITS(1) [],
        MANAGEMENT_DONE_INTERRUPT_MASK OFFSET(0) NUMBITS(1) [],
    ],
    pub phy_management [
        WRITE0 OFFSET(31) NUMBITS(1) [],
        WRITE1 OFFSET(30) NUMBITS(1) [],
        OPERATION OFFSET(28) NUMBITS(2) [
            Write = 0b01,
            Read  = 0b10,
        ],
        PHY_ADDRESS OFFSET(23) NUMBITS(5) [],
        REGISTER_ADDRESS OFFSET(18) NUMBITS(5) [],
        WRITE10 OFFSET(16) NUMBITS(2) [
            Always = 0b10,
        ],
        PHY_WRITE_READ_DATA OFFSET(0) NUMBITS(16) [],
    ],
    pub pause_time [
        QUANTUM OFFSET(0) NUMBITS(16) [],
    ],
    pub tx_pause_quantum [
        QUANTUM OFFSET(0) NUMBITS(16) [],
    ],
    pub pbuf_txcutthru [
        DMA_TX_CUTTHRU OFFSET(31) NUMBITS(1) [],
        DMA_TX_CUTTHRU_THRESHOLD OFFSET(0) NUMBITS(12) [],
    ],
    pub pbuf_rxcutthru [
        DMA_RX_CUTTHRU OFFSET(31) NUMBITS(1) [],
        DMA_RX_CUTTHRU_THRESHOLD OFFSET(0) NUMBITS(12) [],
    ],
    pub jumbo_max_length [
        JUMBO_MAX_LENGTH OFFSET(0) NUMBITS(16) [],
    ],
    pub external_fifo_interface [
        EXTERNAL_FIFO_INTERFACE OFFSET(0) NUMBITS(1) [],
    ],
    pub axi_max_pipeline [
        AW2W_MAX_PIPELINE OFFSET(8) NUMBITS(8) [],
        AR2R_MAX_PIPELINE OFFSET(0) NUMBITS(8) [],
    ],
    pub hash_bottom [
        ADDRESS OFFSET(0) NUMBITS(32) [],
    ],
    pub hash_top [
        ADDRESS OFFSET(0) NUMBITS(32) [],
    ],
    pub spec_add1_bottom [
        ADDRESS OFFSET(0) NUMBITS(32) [],
    ],
    pub spec_add1_top [
        FILTER_TYPE OFFSET(16) NUMBITS(1) [],
        ADDRESS OFFSET(0) NUMBITS(16) [],
    ],
    pub spec_add2_bottom [
        ADDRESS OFFSET(0) NUMBITS(32) [],
    ],
    pub spec_add2_top [
        FILTER_BYTE_MASK OFFSET(24) NUMBITS(6) [],
        FILTER_TYPE OFFSET(16) NUMBITS(1) [],
        ADDRESS OFFSET(0) NUMBITS(16) [],
    ],
    pub spec_add3_bottom [
        ADDRESS OFFSET(0) NUMBITS(32) [],
    ],
    pub spec_add3_top [
        FILTER_BYTE_MASK OFFSET(24) NUMBITS(6) [],
        FILTER_TYPE OFFSET(16) NUMBITS(1) [],
        ADDRESS OFFSET(0) NUMBITS(16) [],
    ],
    pub spec_add4_bottom [
        ADDRESS OFFSET(0) NUMBITS(32) [],
    ],
    pub spec_add4_top [
        FILTER_BYTE_MASK OFFSET(24) NUMBITS(6) [],
        FILTER_TYPE OFFSET(16) NUMBITS(1) [],
        ADDRESS OFFSET(0) NUMBITS(16) [],
    ],
    pub spec_type1 [
        ENABLE_COPY OFFSET(31) NUMBITS(1) [],
        MATCH OFFSET(0) NUMBITS(16) [],
    ],
    pub spec_type2 [
        ENABLE_COPY OFFSET(31) NUMBITS(1) [],
        MATCH OFFSET(0) NUMBITS(16) [],
    ],
    pub spec_type3 [
        ENABLE_COPY OFFSET(31) NUMBITS(1) [],
        MATCH OFFSET(0) NUMBITS(16) [],
    ],
    pub spec_type4 [
        ENABLE_COPY OFFSET(31) NUMBITS(1) [],
        MATCH OFFSET(0) NUMBITS(16) [],
    ],
    pub wol_register [
        WOL_MASK_3 OFFSET(19) NUMBITS(1) [],
        WOL_MASK_2 OFFSET(18) NUMBITS(1) [],
        WOL_MASK_1 OFFSET(17) NUMBITS(1) [],
        WOL_MASK_0 OFFSET(16) NUMBITS(1) [],
        ADDR OFFSET(0) NUMBITS(16) [],
    ],
    pub stretch_ratio [
        IPG_STRETCH OFFSET(0) NUMBITS(16) [],
    ],
    pub stacked_vlan [
        ENABLE_PROCESSING OFFSET(31) NUMBITS(1) [],
        MATCH OFFSET(0) NUMBITS(16) [],
    ],
    pub tx_pfc_pause [
        VECTOR OFFSET(8) NUMBITS(8) [],
        VECTOR_ENABLE OFFSET(0) NUMBITS(8) [],
    ],
    pub mask_add1_bottom [
        ADDRESS_MASK OFFSET(0) NUMBITS(32) [],
    ],
    pub mask_add1_top [
        ADDRESS_MASK OFFSET(0) NUMBITS(16) [],
    ],
    pub dma_addr_or_mask [
        MASK_VALUE OFFSET(28) NUMBITS(4) [],
        MASK_ENABLE OFFSET(0) NUMBITS(4) [],
    ],
    pub rx_ptp_unicast [
        ADDRESS OFFSET(0) NUMBITS(32) [],
    ],
    pub tx_ptp_unicast [
        ADDRESS OFFSET(0) NUMBITS(32) [],
    ],
    pub tsu_nsec_cmp [
        COMPARISON_VALUE OFFSET(0) NUMBITS(22) [],
    ],
    pub tsu_sec_cmp [
        COMPARISON_VALUE OFFSET(0) NUMBITS(32) [],
    ],
    pub tsu_msb_sec_cmp [
        COMPARISON_VALUE OFFSET(0) NUMBITS(16) [],
    ],
    pub tsu_ptp_tx_msb_sec [
        TIMER_SECONDS OFFSET(0) NUMBITS(16) [],
    ],
    pub tsu_ptp_rx_msb_sec [
        TIMER_SECONDS OFFSET(0) NUMBITS(16) [],
    ],
    pub tsu_peer_tx_msb_sec [
        TIMER_SECONDS OFFSET(0) NUMBITS(16) [],
    ],
    pub tsu_peer_rx_msb_sec [
        TIMER_SECONDS OFFSET(0) NUMBITS(16) [],
    ],
    pub dpram_fill_dbg [
        DMA_TX_RX_FILL_LEVEL OFFSET(16) NUMBITS(16) [],
        DMA_TX_Q_FILL_LEVEL_SELECT OFFSET(4) NUMBITS(4) [],
        DMA_TX_RX_FILL_LEVEL_SELECT OFFSET(0) NUMBITS(1) [],
    ],
    pub revision_reg [
        FIX_NUMBER OFFSET(28) NUMBITS(4) [],
        MODULE_IDENTIFICATION_NUMBER OFFSET(16) NUMBITS(12) [],
        MODULE_REVISION OFFSET(0) NUMBITS(16) [],
    ],
    pub octets_txed_bottom [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub octets_txed_top [
        COUNT OFFSET(0) NUMBITS(16) [],
    ],
    pub frames_txed_ok [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub broadcast_txed [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub multicast_txed [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub pause_frames_txed [
        COUNT OFFSET(0) NUMBITS(16) [],
    ],
    pub frames_txed_64 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_txed_65 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_txed_128 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_txed_256 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_txed_512 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_txed_1024 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_txed_1519 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub tx_underruns [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub single_collisions [
        COUNT OFFSET(0) NUMBITS(18) [],
    ],
    pub multiple_collisions [
        COUNT OFFSET(0) NUMBITS(18) [],
    ],
    pub excessive_collisions [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub late_collisions [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub deferred_frames [
        COUNT OFFSET(0) NUMBITS(18) [],
    ],
    pub crs_errors [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub octets_rxed_bottom [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub octets_rxed_top [
        COUNT OFFSET(0) NUMBITS(16) [],
    ],
    pub frames_rxed_ok [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub broadcast_rxed [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub multicast_rxed [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub pause_frames_rxed [
        COUNT OFFSET(0) NUMBITS(16) [],
    ],
    pub frames_rxed_64 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_rxed_65 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_rxed_128 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_rxed_256 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_rxed_512 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_rxed_1024 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub frames_rxed_1519 [
        COUNT OFFSET(0) NUMBITS(32) [],
    ],
    pub undersize_frames [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub excessive_rx_length [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub rx_jabbers [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub fcs_errors [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub rx_length_errors [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub rx_symbol_errors [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub alignment_errors [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub rx_resource_errors [
        COUNT OFFSET(0) NUMBITS(18) [],
    ],
    pub rx_overruns [
        COUNT OFFSET(0) NUMBITS(10) [],
    ],
    pub rx_ip_ck_errors [
        COUNT OFFSET(0) NUMBITS(8) [],
    ],
    pub rx_tcp_ck_errors [
        COUNT OFFSET(0) NUMBITS(8) [],
    ],
    pub rx_udp_ck_errors [
        COUNT OFFSET(0) NUMBITS(8) [],
    ],
    pub auto_flushed_pkts [
        COUNT OFFSET(0) NUMBITS(16) [],
    ],
    pub tsu_timer_incr_sub_nsec [
        SUB_NS_INCR_LSB OFFSET(24) NUMBITS(8) [],
        SUB_NS_INCR OFFSET(0) NUMBITS(16) [],
    ],
    pub tsu_timer_msb_sec [
        TIMER OFFSET(0) NUMBITS(16) [],
    ],
    pub tsu_strobe_msb_sec [
        STROBE OFFSET(0) NUMBITS(16) [],
    ],
    pub tsu_strobe_sec [
        STROBE OFFSET(0) NUMBITS(32) [],
    ],
    pub tsu_strobe_nsec [
        STROBE OFFSET(0) NUMBITS(30) [],
    ],
    pub tsu_timer_sec [
        TIMER OFFSET(0) NUMBITS(32) [],
    ],
    pub tsu_timer_nsec [
        TIMER OFFSET(0) NUMBITS(30) [],
    ],
    pub tsu_timer_adjust [
        ADD_SUBTRACT OFFSET(31) NUMBITS(1) [],
        INCREMENT_VALUE OFFSET(0) NUMBITS(30) [],
    ],
    pub tsu_timer_incr [
        NUM_INCS OFFSET(16) NUMBITS(8) [],
        ALT_NS_INCR OFFSET(8) NUMBITS(8) [],
        NS_INCREMENT OFFSET(0) NUMBITS(8) [],
    ],
    pub tsu_ptp_tx_sec [
        TIMER OFFSET(0) NUMBITS(32) [],
    ],
    pub tsu_ptp_tx_nsec [
        TIMER OFFSET(0) NUMBITS(30) [],
    ],
    pub tsu_ptp_rx_sec [
        TIMER OFFSET(0) NUMBITS(32) [],
    ],
    pub tsu_ptp_rx_nsec [
        TIMER OFFSET(0) NUMBITS(30) [],
    ],
    pub tsu_peer_tx_sec [
        TIMER OFFSET(0) NUMBITS(32) [],
    ],
    pub tsu_peer_tx_nsec [
        TIMER OFFSET(0) NUMBITS(30) [],
    ],
    pub tsu_peer_rx_sec [
        TIMER OFFSET(0) NUMBITS(32) [],
    ],
    pub tsu_peer_rx_nsec [
        TIMER OFFSET(0) NUMBITS(30) [],
    ],
    pub pcs_control [
        PCS_SOFTWARE_RESET OFFSET(15) NUMBITS(1) [],
        LOOPBACK_MODE OFFSET(14) NUMBITS(1) [],
        SPEED_SELECT_BIT_1 OFFSET(13) NUMBITS(1) [],
        ENABLE_AUTO_NEG OFFSET(12) NUMBITS(1) [],
        RESTART_AUTO_NEG OFFSET(9) NUMBITS(1) [],
        MAC_DUPLEX_STATE OFFSET(8) NUMBITS(1) [],
        COLLISION_TEST OFFSET(7) NUMBITS(1) [],
        SPEED_SELECT_BIT_0 OFFSET(6) NUMBITS(1) [],
    ],
    pub pcs_status [
        BASE_100_T4 OFFSET(15) NUMBITS(1) [],
        BASE_100_X_FULL_DUPLEX OFFSET(14) NUMBITS(1) [],
        BASE_100_X_HALF_DUPLEX OFFSET(13) NUMBITS(1) [],
        MBPS_10_FULL_DUPLEX OFFSET(12) NUMBITS(1) [],
        MBPS_10_HALF_DUPLEX OFFSET(11) NUMBITS(1) [],
        BASE_100_T2_FULL_DUPLEX OFFSET(10) NUMBITS(1) [],
        BASE_100_T2_HALF_DUPLEX OFFSET(9) NUMBITS(1) [],
        EXTENDED_STATUS OFFSET(8) NUMBITS(1) [],
        AUTO_NEG_COMPLETE OFFSET(5) NUMBITS(1) [],
        REMOTE_FAULT OFFSET(4) NUMBITS(1) [],
        AUTO_NEG_ABILITY OFFSET(3) NUMBITS(1) [],
        LINK_STATUS OFFSET(2) NUMBITS(1) [],
        EXTENDED_CAPABILITIES OFFSET(0) NUMBITS(1) [],
    ],
    pub pcs_phy_top_id [
        ID_CODE OFFSET(0) NUMBITS(16) [],
    ],
    pub pcs_phy_bot_id [
        ID_CODE OFFSET(0) NUMBITS(16) [],
    ],
    pub pcs_an_adv [
        NEXT_PAGE OFFSET(15) NUMBITS(1) [],
        REMOTE_FAULT OFFSET(12) NUMBITS(2) [],
        PAUSE OFFSET(7) NUMBITS(2) [],
        HALF_DUPLEX OFFSET(6) NUMBITS(1) [],
        FULL_DUPLEX OFFSET(5) NUMBITS(1) [],
    ],
    pub pcs_an_lp_base [
        LINK_PARTNER_NEXT_PAGE_STATUS OFFSET(15) NUMBITS(1) [],
        LINK_PARTNER_ACKNOWLEDGE OFFSET(14) NUMBITS(1) [],
        LINK_PARTNER_REMOTE_FAULT_DUPLEX_MODE OFFSET(12) NUMBITS(2) [],
        SPEED_RESERVED OFFSET(9) NUMBITS(3) [],
        PAUSE OFFSET(7) NUMBITS(2) [],
        LINK_PARTNER_HALF_DUPLEX OFFSET(6) NUMBITS(1) [],
        LINK_PARTNER_FULL_DUPLEX OFFSET(5) NUMBITS(1) [],
    ],
    pub pcs_an_exp [
        NEXT_PAGE_CAPABILITY OFFSET(2) NUMBITS(1) [],
        PAGE_RECEIVED OFFSET(1) NUMBITS(1) [],
    ],
    pub pcs_an_np_tx [
        NEXT_PAGE_TO_TRANSMIT OFFSET(15) NUMBITS(1) [],
        MESSAGE_PAGE_INDICATOR OFFSET(13) NUMBITS(1) [],
        ACKNOWLEDGE_2 OFFSET(12) NUMBITS(1) [],
        MESSAGE OFFSET(0) NUMBITS(11) [],
    ],
    pub pcs_an_lp_np [
        NEXT_PAGE_TO_RECEIVE OFFSET(15) NUMBITS(1) [],
        ACKNOWLEDGE OFFSET(14) NUMBITS(1) [],
        MESSAGE_PAGE_INDICATOR OFFSET(13) NUMBITS(1) [],
        ACKNOWLEDGE_2 OFFSET(12) NUMBITS(1) [],
        TOGGLE OFFSET(11) NUMBITS(1) [],
        MESSAGE OFFSET(0) NUMBITS(11) [],
    ],
    pub pcs_an_ext_status [
        FULL_DUPLEX_1000BASE_X OFFSET(15) NUMBITS(1) [],
        HALF_DUPLEX_1000BASE_X OFFSET(14) NUMBITS(1) [],
        FULL_DUPLEX_1000BASE_T OFFSET(13) NUMBITS(1) [],
        HALF_DUPLEX_1000BASE_T OFFSET(12) NUMBITS(1) [],
    ],
    pub rx_lpi [
        COUNT OFFSET(0) NUMBITS(16) [],
    ],
    pub rx_lpi_time [
        LPI_TIME OFFSET(0) NUMBITS(24) [],
    ],
    pub tx_lpi [
        COUNT OFFSET(0) NUMBITS(16) [],
    ],
    pub tx_lpi_time [
        LPI_TIME OFFSET(0) NUMBITS(24) [],
    ],
    pub designcfg_debug1 [
        AXI_CACHE_VALUE OFFSET(28) NUMBITS(4) [],
        DMA_BUS_WIDTH OFFSET(25) NUMBITS(3) [],
        IRQ_READ_CLEAR OFFSET(23) NUMBITS(1) [],
        NO_SNAPSHOT OFFSET(22) NUMBITS(1) [],
        NO_STATS OFFSET(21) NUMBITS(1) [],
        NO_SCAN_PINS OFFSET(20) NUMBITS(1) [],
        USER_IN_WIDTH OFFSET(15) NUMBITS(5) [],
        USER_OUT_WIDTH OFFSET(10) NUMBITS(5) [],
        USER_IO OFFSET(9) NUMBITS(1) [],
        APB_REV2 OFFSET(8) NUMBITS(1) [],
        APB_REV1 OFFSET(7) NUMBITS(1) [],
        EXT_FIFO_INTERFACE OFFSET(6) NUMBITS(1) [],
        NO_INT_LOOPBACK OFFSET(5) NUMBITS(1) [],
        INT_LOOPBACK OFFSET(4) NUMBITS(1) [],
        TDC_50 OFFSET(3) NUMBITS(1) [],
        RDC_50 OFFSET(2) NUMBITS(1) [],
        SERDES OFFSET(1) NUMBITS(1) [],
        NO_PCS OFFSET(0) NUMBITS(1) [],
    ],
    pub designcfg_debug2 [
        SPRAM OFFSET(31) NUMBITS(1) [],
        AXI OFFSET(30) NUMBITS(1) [],
        TX_PBUF_ADDR OFFSET(26) NUMBITS(4) [],
        RX_PBUF_ADDR OFFSET(22) NUMBITS(4) [],
        TX_PKT_BUFFER OFFSET(21) NUMBITS(1) [],
        RX_PKT_BUFFER OFFSET(20) NUMBITS(1) [],
        HPROT_VALUE OFFSET(16) NUMBITS(4) [],
        JUMBO_MAX_LENGTH OFFSET(0) NUMBITS(16) [],
    ],
    pub designcfg_debug3 [
        NUM_SPEC_ADD_FILTERS OFFSET(24) NUMBITS(6) [],
    ],
    pub designcfg_debug5 [
        AXI_PROT_VALUE OFFSET(29) NUMBITS(3) [],
        TSU_CLK OFFSET(28) NUMBITS(1) [],
        RX_BUFFER_LENGTH_DEF OFFSET(20) NUMBITS(8) [],
        TX_PBUF_SIZE_DEF OFFSET(19) NUMBITS(1) [],
        RX_PBUF_SIZE_DEF OFFSET(17) NUMBITS(2) [],
        ENDIAN_SWAP_DEF OFFSET(15) NUMBITS(2) [],
        MDC_CLOCK_DIV OFFSET(12) NUMBITS(3) [],
        DMA_BUS_WIDTH_DEF OFFSET(10) NUMBITS(2) [],
        PHY_IDENT OFFSET(9) NUMBITS(1) [],
        TSU OFFSET(8) NUMBITS(1) [],
        TX_FIFO_CNT_WIDTH OFFSET(4) NUMBITS(4) [],
        RX_FIFO_CNT_WIDTH OFFSET(0) NUMBITS(4) [],
    ],
    pub designcfg_debug6 [
        PBUF_CUTTHRU OFFSET(25) NUMBITS(1) [],
        PFC_MULTI_QUANTUM OFFSET(24) NUMBITS(1) [],
        DMA_ADDR_WIDTH_IS_64B OFFSET(23) NUMBITS(1) [],
        HOST_IF_SOFT_SELECT OFFSET(22) NUMBITS(1) [],
        TX_ADD_FIFO_IF OFFSET(21) NUMBITS(1) [],
        EXT_TSU_TIMER OFFSET(20) NUMBITS(1) [],
        TX_PBUF_QUEUE_SEGMENT_SIZE OFFSET(16) NUMBITS(4) [],
        DMA_PRIORITY_QUEUE15 OFFSET(15) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE14 OFFSET(14) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE13 OFFSET(13) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE12 OFFSET(12) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE11 OFFSET(11) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE10 OFFSET(10) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE9 OFFSET(9) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE8 OFFSET(8) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE7 OFFSET(7) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE6 OFFSET(6) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE5 OFFSET(5) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE4 OFFSET(4) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE3 OFFSET(3) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE2 OFFSET(2) NUMBITS(1) [],
        DMA_PRIORITY_QUEUE1 OFFSET(1) NUMBITS(1) [],
    ],
    pub designcfg_debug7 [
        TX_PBUF_NUM_SEGMENTS_Q7 OFFSET(28) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q6 OFFSET(24) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q5 OFFSET(20) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q4 OFFSET(16) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q3 OFFSET(12) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q2 OFFSET(8) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q1 OFFSET(4) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q0 OFFSET(0) NUMBITS(4) [],
    ],
    pub designcfg_debug8 [
        NUM_TYPE1_SCREENERS OFFSET(24) NUMBITS(8) [],
        NUM_TYPE2_SCREENERS OFFSET(16) NUMBITS(8) [],
        NUM_SCR2_ETHTYPE_REGS OFFSET(8) NUMBITS(8) [],
        NUM_SCR2_COMPARE_REGS OFFSET(0) NUMBITS(8) [],
    ],
    pub designcfg_debug9 [
        TX_PBUF_NUM_SEGMENTS_Q15 OFFSET(28) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q14 OFFSET(24) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q13 OFFSET(20) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q12 OFFSET(16) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q11 OFFSET(12) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q10 OFFSET(8) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q9 OFFSET(4) NUMBITS(4) [],
        TX_PBUF_NUM_SEGMENTS_Q8 OFFSET(0) NUMBITS(4) [],
    ],
    pub designcfg_debug10 [
        EMAC_BUS_WIDTH OFFSET(28) NUMBITS(4) [],
        TX_PBUF_DATA OFFSET(24) NUMBITS(4) [],
        RX_PBUF_DATA OFFSET(20) NUMBITS(4) [],
        AXI_ACCESS_PIPELINE_BITS OFFSET(16) NUMBITS(4) [],
        AXI_TX_DESCR_RD_BUFF_BITS OFFSET(12) NUMBITS(4) [],
        AXI_RX_DESCR_RD_BUFF_BITS OFFSET(8) NUMBITS(4) [],
        AXI_TX_DESCR_WR_BUFF_BITS OFFSET(4) NUMBITS(4) [],
        AXI_RX_DESCR_WR_BUFF_BITS OFFSET(0) NUMBITS(4) [],
    ],
    pub int_q1_status [
        RESP_NOT_OK OFFSET(11) NUMBITS(1) [],
        RECEIVE_OVERRUN OFFSET(10) NUMBITS(1) [],
        TRANSMIT_COMPLETE OFFSET(7) NUMBITS(1) [],
        AMBA_ERROR OFFSET(6) NUMBITS(1) [],
        RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION OFFSET(5) NUMBITS(1) [],
        RX_USED_BIT_READ OFFSET(2) NUMBITS(1) [],
        RECEIVE_COMPLETE OFFSET(1) NUMBITS(1) [],
    ],
    pub transmit_q1_ptr [
        DMA_TX_Q_PTR OFFSET(0) NUMBITS(32) [],
    ],
    pub receive_q1_ptr [
        DMA_RX_Q_PTR OFFSET(0) NUMBITS(32) [],
    ],
    pub dma_rxbuf_size_q1 [
        DMA_RX_Q_BUF_SIZE OFFSET(0) NUMBITS(8) [],
    ],
    pub cbs_control [
        CBS_ENABLE_QUEUE_B OFFSET(1) NUMBITS(1) [],
        CBS_ENABLE_QUEUE_A OFFSET(0) NUMBITS(1) [],
    ],
    pub upper_tx_q_base_addr [
        UPPER_TX_Q_BASE_ADDR OFFSET(0) NUMBITS(32) [],
    ],
    pub tx_bd_control [
        TX_BD_TS_MODE OFFSET(4) NUMBITS(2) [],
    ],
    pub rx_bd_control [
        RX_BD_TS_MODE OFFSET(4) NUMBITS(2) [],
    ],
    pub upper_rx_q_base_addr [
        UPPER_RX_Q_BASE_ADDR OFFSET(0) NUMBITS(32) [],
    ],
    pub screening_type_1_register_0 [
        UDP_PORT_MATCH_ENABLE OFFSET(29) NUMBITS(1) [],
        DSTC_ENABLE OFFSET(28) NUMBITS(1) [],
        UDP_PORT_MATCH OFFSET(12) NUMBITS(16) [],
        DSTC_MATCH OFFSET(4) NUMBITS(8) [],
        QUEUE_NUMBER OFFSET(0) NUMBITS(4) [],
    ],
    pub screening_type_1_register_1 [
        UDP_PORT_MATCH_ENABLE OFFSET(29) NUMBITS(1) [],
        DSTC_ENABLE OFFSET(28) NUMBITS(1) [],
        UDP_PORT_MATCH OFFSET(12) NUMBITS(16) [],
        DSTC_MATCH OFFSET(4) NUMBITS(8) [],
        QUEUE_NUMBER OFFSET(0) NUMBITS(4) [],
    ],
    pub screening_type_1_register_2 [
        UDP_PORT_MATCH_ENABLE OFFSET(29) NUMBITS(1) [],
        DSTC_ENABLE OFFSET(28) NUMBITS(1) [],
        UDP_PORT_MATCH OFFSET(12) NUMBITS(16) [],
        DSTC_MATCH OFFSET(4) NUMBITS(8) [],
        QUEUE_NUMBER OFFSET(0) NUMBITS(4) [],
    ],
    pub screening_type_1_register_3 [
        UDP_PORT_MATCH_ENABLE OFFSET(29) NUMBITS(1) [],
        DSTC_ENABLE OFFSET(28) NUMBITS(1) [],
        UDP_PORT_MATCH OFFSET(12) NUMBITS(16) [],
        DSTC_MATCH OFFSET(4) NUMBITS(8) [],
        QUEUE_NUMBER OFFSET(0) NUMBITS(4) [],
    ],
    pub screening_type_2_register_0 [
        COMPARE_C_ENABLE OFFSET(30) NUMBITS(1) [],
        COMPARE_C OFFSET(25) NUMBITS(5) [],
        COMPARE_B_ENABLE OFFSET(24) NUMBITS(1) [],
        COMPARE_B OFFSET(19) NUMBITS(5) [],
        COMPARE_A_ENABLE OFFSET(18) NUMBITS(1) [],
        COMPARE_A OFFSET(13) NUMBITS(5) [],
        ETHERTYPE_ENABLE OFFSET(12) NUMBITS(1) [],
        INDEX OFFSET(9) NUMBITS(3) [],
        VLAN_ENABLE OFFSET(8) NUMBITS(1) [],
        VLAN_PRIORITY OFFSET(4) NUMBITS(3) [],
        QUEUE_NUMBER OFFSET(0) NUMBITS(4) [],
    ],
    pub screening_type_2_register_1 [
        COMPARE_C_ENABLE OFFSET(30) NUMBITS(1) [],
        COMPARE_C OFFSET(25) NUMBITS(5) [],
        COMPARE_B_ENABLE OFFSET(24) NUMBITS(1) [],
        COMPARE_B OFFSET(19) NUMBITS(5) [],
        COMPARE_A_ENABLE OFFSET(18) NUMBITS(1) [],
        COMPARE_A OFFSET(13) NUMBITS(5) [],
        ETHERTYPE_ENABLE OFFSET(12) NUMBITS(1) [],
        INDEX OFFSET(9) NUMBITS(3) [],
        VLAN_ENABLE OFFSET(8) NUMBITS(1) [],
        VLAN_PRIORITY OFFSET(4) NUMBITS(3) [],
        QUEUE_NUMBER OFFSET(0) NUMBITS(4) [],
    ],
    pub screening_type_2_register_2 [
        COMPARE_C_ENABLE OFFSET(30) NUMBITS(1) [],
        COMPARE_C OFFSET(25) NUMBITS(5) [],
        COMPARE_B_ENABLE OFFSET(24) NUMBITS(1) [],
        COMPARE_B OFFSET(19) NUMBITS(5) [],
        COMPARE_A_ENABLE OFFSET(18) NUMBITS(1) [],
        COMPARE_A OFFSET(13) NUMBITS(5) [],
        ETHERTYPE_ENABLE OFFSET(12) NUMBITS(1) [],
        INDEX OFFSET(9) NUMBITS(3) [],
        VLAN_ENABLE OFFSET(8) NUMBITS(1) [],
        VLAN_PRIORITY OFFSET(4) NUMBITS(3) [],
        QUEUE_NUMBER OFFSET(0) NUMBITS(4) [],
    ],
    pub screening_type_2_register_3 [
        COMPARE_C_ENABLE OFFSET(30) NUMBITS(1) [],
        COMPARE_C OFFSET(25) NUMBITS(5) [],
        COMPARE_B_ENABLE OFFSET(24) NUMBITS(1) [],
        COMPARE_B OFFSET(19) NUMBITS(5) [],
        COMPARE_A_ENABLE OFFSET(18) NUMBITS(1) [],
        COMPARE_A OFFSET(13) NUMBITS(5) [],
        ETHERTYPE_ENABLE OFFSET(12) NUMBITS(1) [],
        INDEX OFFSET(9) NUMBITS(3) [],
        VLAN_ENABLE OFFSET(8) NUMBITS(1) [],
        VLAN_PRIORITY OFFSET(4) NUMBITS(3) [],
        QUEUE_NUMBER OFFSET(0) NUMBITS(4) [],
    ],
    pub int_q1_enable [
        ENABLE_RESP_NOT_OK_INTERRUPT OFFSET(11) NUMBITS(1) [],
        ENABLE_RECEIVE_OVERRUN_INTERRUPT OFFSET(10) NUMBITS(1) [],
        ENABLE_TRANSMIT_COMPLETE_INTERRUPT OFFSET(7) NUMBITS(1) [],
        ENABLE_TRANSMIT_FRAME_CORRUPTION_DUE_TO_AMBA_ERROR_INTERRUPT OFFSET(6) NUMBITS(1) [],
        ENABLE_RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION_INTERRUPT OFFSET(5) NUMBITS(1) [],
        ENABLE_RX_USED_BIT_READ_INTERRUPT OFFSET(2) NUMBITS(1) [],
        ENABLE_RECEIVE_COMPLETE_INTERRUPT OFFSET(1) NUMBITS(1) [],
    ],
    pub int_q1_disable [
        DISABLE_RESP_NOT_OK_INTERRUPT OFFSET(11) NUMBITS(1) [],
        DISABLE_RECEIVE_OVERRUN_INTERRUPT OFFSET(10) NUMBITS(1) [],
        DISABLE_TRANSMIT_COMPLETE_INTERRUPT OFFSET(7) NUMBITS(1) [],
        DISABLE_TRANSMIT_FRAME_CORRUPTION_DUE_TO_AMBA_ERROR_INTERRUPT OFFSET(6) NUMBITS(1) [],
        DISABLE_RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION_INTERRUPT OFFSET(5) NUMBITS(1) [],
        DISABLE_RX_USED_BIT_READ_INTERRUPT OFFSET(2) NUMBITS(1) [],
        DISABLE_RECEIVE_COMPLETE_INTERRUPT OFFSET(1) NUMBITS(1) [],
    ],
    pub int_q1_mask [
        RESP_NOT_OK_INTERRUPT_MASK OFFSET(11) NUMBITS(1) [],
        RECEIVE_OVERRUN_INTERRUPT_MASK OFFSET(10) NUMBITS(1) [],
        TRANSMIT_COMPLETE_INTERRUPT_MASK OFFSET(7) NUMBITS(1) [],
        AMBA_ERROR_INTERRUPT_MASK OFFSET(6) NUMBITS(1) [],
        RETRY_LIMIT_EXCEEDED_OR_LATE_COLLISION_INTERRUPT_MASK OFFSET(5) NUMBITS(1) [],
        RX_USED_INTERRUPT_MASK OFFSET(2) NUMBITS(1) [],
        RECEIVE_COMPLETE_INTERRUPT_MASK OFFSET(1) NUMBITS(1) [],
    ],
    pub screening_type_2_ethertype_reg_0 [
        COMPARE_VALUE OFFSET(0) NUMBITS(16) [],
    ],
    pub screening_type_2_ethertype_reg_1 [
        COMPARE_VALUE OFFSET(0) NUMBITS(16) [],
    ],
    pub screening_type_2_ethertype_reg_2 [
        COMPARE_VALUE OFFSET(0) NUMBITS(16) [],
    ],
    pub screening_type_2_ethertype_reg_3 [
        COMPARE_VALUE OFFSET(0) NUMBITS(16) [],
    ],
    pub type2_compare_0_word_0 [
        COMPARE_VALUE OFFSET(16) NUMBITS(16) [],
        MASK_VALUE OFFSET(0) NUMBITS(16) [],
    ],
    pub type2_compare_0_word_1 [
        COMPARE_OFFSET OFFSET(7) NUMBITS(2) [],
        OFFSET_VALUE OFFSET(0) NUMBITS(7) [],
    ],
    pub type2_compare_1_word_0 [
        COMPARE_VALUE OFFSET(16) NUMBITS(16) [],
        MASK_VALUE OFFSET(0) NUMBITS(16) [],
    ],
    pub type2_compare_1_word_1 [
        COMPARE_OFFSET OFFSET(7) NUMBITS(2) [],
        OFFSET_VALUE OFFSET(0) NUMBITS(7) [],
    ],
    pub type2_compare_2_word_0 [
        COMPARE_VALUE OFFSET(16) NUMBITS(16) [],
        MASK_VALUE OFFSET(0) NUMBITS(16) [],
    ],
    pub type2_compare_2_word_1 [
        COMPARE_OFFSET OFFSET(7) NUMBITS(2) [],
        OFFSET_VALUE OFFSET(0) NUMBITS(7) [],
    ],
    pub type2_compare_3_word_0 [
        COMPARE_VALUE OFFSET(16) NUMBITS(16) [],
        MASK_VALUE OFFSET(0) NUMBITS(16) [],
    ],
    pub type2_compare_3_word_1 [
        COMPARE_OFFSET OFFSET(7) NUMBITS(2) [],
        OFFSET_VALUE OFFSET(0) NUMBITS(7) [],
    ],
}
